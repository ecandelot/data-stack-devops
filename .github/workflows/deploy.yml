name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AIRFLOW_IMAGE: airflow-custom
      TRINO_IMAGE: trino-custom

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check formatting with Black (non-blocking)
      continue-on-error: true
      run: |
        pip install black
        black docker/

    - name: Lint YAML
      run: |
        sudo apt install yamllint -y
        yamllint .

    - name: Build Docker images
      run: |
        docker build -t $AIRFLOW_IMAGE ./docker/airflow
        docker build -t $TRINO_IMAGE ./docker/trino

    - name: Deploy via SCP
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        source: "."
        target: "~/stack_data"

    - name: Create .env on remote
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          cd ~/stack_data
          cat > .env <<EOF
          AIRFLOW_USER=${{ secrets.AIRFLOW_USER }}
          AIRFLOW_PASSWORD=${{ secrets.AIRFLOW_PASSWORD }}
          AIRFLOW_DB=${{ secrets.AIRFLOW_DB }}
          AIRFLOW_SECRET=${{ secrets.AIRFLOW_SECRET }}
          TRINO_PORT=${{ secrets.TRINO_PORT }}
          EOF

    - name: Remote deploy command
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.VM_HOST }}
        username: ${{ secrets.VM_USER }}
        key: ${{ secrets.VM_SSH_KEY }}
        script: |
          cd ~/stack_data
          docker compose down
          docker compose up -d --build