name: CI/CD Pipeline

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AIRFLOW_IMAGE: airflow-custom
      TRINO_IMAGE: trino-custom
      AIRFLOW_PORT: ${{ secrets.AIRFLOW_PORT }}
      AIRFLOW_EXECUTOR: ${{ secrets.AIRFLOW_EXECUTOR }}
      AIRFLOW_DB: ${{ secrets.AIRFLOW_DB }}
      AIRFLOW_SECRET: ${{ secrets.AIRFLOW_SECRET }}
      AIRFLOW_USER: ${{ secrets.AIRFLOW_USER }}
      AIRFLOW_PASSWORD: ${{ secrets.AIRFLOW_PASSWORD }}
      AIRFLOW_FIRSTNAME: ${{ secrets.AIRFLOW_FIRSTNAME }}
      AIRFLOW_LASTNAME: ${{ secrets.AIRFLOW_LASTNAME }}
      AIRFLOW_ROLE: ${{ secrets.AIRFLOW_ROLE }}
      AIRFLOW_EMAIL: ${{ secrets.AIRFLOW_EMAIL }}
      TRINO_PORT: ${{ secrets.TRINO_PORT }}
      TRINO_CATALOG_PATH: ${{ secrets.TRINO_CATALOG_PATH }}
      POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
      POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
      POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
      POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Check formatting with Black (non-blocking)
      continue-on-error: true
      run: |
        pip install black
        black docker/

    - name: Format YAML with Prettier (non-blocking)
      continue-on-error: true
      run: |
        npm install --global prettier
        prettier --write "**/*.{yml,yaml}"

    - name: Install Docker Compose CLI plugin
      run: |
        mkdir -p ~/.docker/cli-plugins/
        curl -SL https://github.com/docker/compose/releases/download/v2.20.2/docker-compose-linux-x86_64 -o ~/.docker/cli-plugins/docker-compose
        chmod +x ~/.docker/cli-plugins/docker-compose
        docker compose version

    - name: Build Docker images via Compose
      run: docker compose build

    - name: Deploy files to remote host
      uses: appleboy/scp-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        source: "."
        target: "~/stack_data"

    - name: Create .env on remote
      uses: appleboy/ssh-action@master
      env:
        AIRFLOW_USER: ${{ secrets.AIRFLOW_USER }}
        AIRFLOW_PASSWORD: ${{ secrets.AIRFLOW_PASSWORD }}
        AIRFLOW_DB: ${{ secrets.AIRFLOW_DB }}
        AIRFLOW_SECRET: ${{ secrets.AIRFLOW_SECRET }}
        AIRFLOW_PORT: ${{ secrets.AIRFLOW_PORT }}
        AIRFLOW_EXECUTOR: ${{ secrets.AIRFLOW_EXECUTOR }}
        AIRFLOW_FIRSTNAME: ${{ secrets.AIRFLOW_FIRSTNAME }}
        AIRFLOW_LASTNAME: ${{ secrets.AIRFLOW_LASTNAME }}
        AIRFLOW_ROLE: ${{ secrets.AIRFLOW_ROLE }}
        AIRFLOW_EMAIL: ${{ secrets.AIRFLOW_EMAIL }}
        TRINO_PORT: ${{ secrets.TRINO_PORT }}
        TRINO_CATALOG_PATH: ${{ secrets.TRINO_CATALOG_PATH }}
        POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
        POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
        POSTGRES_DB: ${{ secrets.POSTGRES_DB }}
        POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}``
        envs: AIRFLOW_USER,AIRFLOW_PASSWORD,AIRFLOW_DB,AIRFLOW_SECRET,AIRFLOW_PORT,AIRFLOW_EXECUTOR,AIRFLOW_FIRSTNAME,AIRFLOW_LASTNAME,AIRFLOW_ROLE,AIRFLOW_EMAIL,TRINO_PORT,TRINO_CATALOG_PATH,POSTGRES_USER,POSTGRES_PASSWORD,POSTGRES_DB,POSTGRES_PORT
        script: |
          echo "Debugging secret values:"
          echo "AIRFLOW_USER is set to: $AIRFLOW_USER"
          echo "AIRFLOW_PASSWORD is set to: $AIRFLOW_PASSWORD"
          echo "AIRFLOW_DB is set to: $AIRFLOW_DB"
          echo "AIRFLOW_SECRET is set to: $AIRFLOW_SECRET"
          echo "AIRFLOW_PORT is set to: $AIRFLOW_PORT"
          echo "AIRFLOW_EXECUTOR is set to: $AIRFLOW_EXECUTOR"
          echo "AIRFLOW_FIRSTNAME is set to: $AIRFLOW_FIRSTNAME"
          echo "AIRFLOW_LASTNAME is set to: $AIRFLOW_LASTNAME"
          echo "AIRFLOW_ROLE is set to: $AIRFLOW_ROLE"
          echo "AIRFLOW_EMAIL is set to: $AIRFLOW_EMAIL"
          echo "TRINO_PORT is set to: $TRINO_PORT"
          echo "TRINO_CATALOG_PATH is set to: $TRINO_CATALOG_PATH"
          echo "POSTGRES_USER is set to: $POSTGRES_USER"
          echo "POSTGRES_PASSWORD is set to: $POSTGRES_PASSWORD"
          echo "POSTGRES_DB is set to: $POSTGRES_DB"
          echo "POSTGRES_PORT is set to: $POSTGRES_PORT"

          cd ~/stack_data
          cat > .env <<EOF
          AIRFLOW_USER=$AIRFLOW_USER
          AIRFLOW_PASSWORD=$AIRFLOW_PASSWORD
          AIRFLOW_DB=$AIRFLOW_DB
          AIRFLOW_SECRET=$AIRFLOW_SECRET
          AIRFLOW_PORT=$AIRFLOW_PORT
          AIRFLOW_EXECUTOR=$AIRFLOW_EXECUTOR
          AIRFLOW_FIRSTNAME=$AIRFLOW_FIRSTNAME
          AIRFLOW_LASTNAME=$AIRFLOW_LASTNAME
          AIRFLOW_ROLE=$AIRFLOW_ROLE
          AIRFLOW_EMAIL=$AIRFLOW_EMAIL
          TRINO_PORT=$TRINO_PORT
          TRINO_CATALOG_PATH=$TRINO_CATALOG_PATH
          POSTGRES_USER=$POSTGRES_USER
          POSTGRES_PASSWORD=$POSTGRES_PASSWORD
          POSTGRES_DB=$POSTGRES_DB
          POSTGRES_PORT=$POSTGRES_PORT
          EOF



    - name: Remote deploy command - docker compose up
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.DEPLOY_HOST }}
        username: ${{ secrets.DEPLOY_USER }}
        key: ${{ secrets.DEPLOY_KEY }}
        script: |
          cd ~/stack_data
          docker-compose down
          docker-compose --env-file .env up -d --build
